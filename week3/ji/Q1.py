'''
# 문제 설명
철수의 생일을 맞아 XX 식당에서 생일 파티를 하기로 했습니다. 생일 파티를 하는 XX 식당까지는 택시를 타고 이동하기로 했습니다. 철수의 친구들은 친한 친구들끼리 그룹을 구성하고 있으며, 한 사람당 하나의 그룹에만 속해 있습니다. 택시를 탈 때는 반드시 같은 그룹에 속한 친구들은 같은 택시를 타기로 했으며, 한 택시에는 여러 그룹이 함께 탈 수 있습니다. 단, 택시에는 최대 4명까지 함께 탑승 가능합니다.
각 그룹의 구성원 수가 들어있는 배열 s가 매개변수로 주어질 때, 필요한 택시의 수의 최솟값을 return 하도록 solution 함수를 완성해주세요.

# 주의사항
s는 각 그룹별 구성원 수가 들어있는 배열이며, 배열의 길이(그룹의 수)는 100,000 이하의 자연수입니다.
각 그룹의 구성원 수는 4 이하의 자연수입니다.
# 입출력 예
s	output
[1,2,4,3,3]	4
[2,3,4,4,2,1,3,1]	5

# 입출력 설명
# 입출력 예 #1
한 그룹당 하나씩의 택시를 이용한다면 총 5대의 택시가 필요합니다. 그러나 다음과 같이 탑승한다면 4대의 택시만으로도 충분합니다.

첫 번째 그룹(1명)과 네 번째 그룹(3명)이 같은 택시를 탑니다.
그 외 나머지 그룹은 모두 다른 택시를 탑니다.
# 입출력 예 #2
한 그룹당 하나씩의 택시를 이용한다면 총 8대의 택시가 필요하지만, 다음과 같이 탑승한다면 5대의 택시만으로도 충분합니다.

첫 번째 그룹(2명)과 다섯 번째 그룹(2명)이 같은 택시를 탑니다.
두 번째 그룹(3명)과 여섯 번째 그룹(1명)이 같은 택시를 탑니다.
일곱 번째 그룹(3명)과 여덟 번째 그룹(1명)이 같은 택시를 탑니다.
그 외 나머지 그룹은 모두 다른 택시를 탑니다.


각 그룹의 구성원 수가 들어있는 배열 s가 매개변수로 주어질 때, 필요한 택시의 수의 최솟값을 return 하도록 solution 함수를 완성해주세요.
'''

def solution(s) :

    taxi = 0 # 필요한 택시수
    sort_s = sorted(s) # 입력받은 배열을 오름차순 정렬
    one_two = 0 # 그룹이 1명, 2명인 사람들의 수

    while sort_s : # 비어있을 때 까지 반복
        pop = sort_s.pop()
        if pop == 4 : # 4명일 경우 그 그룹을 택시에 태워서 보내기
            taxi += 1
            continue

        elif pop == 3 :  # 3명일 경우
            if 1 in sort_s : # 1명인 그룹이 있다면 같이 택시에 태워서 보내기
                sort_s.remove(1)
            taxi += 1
            continue

        one_two += pop # 1, 2명인 그룹의 사람들을 모두 더함 > 나중에 //group_max 로 만들어 택시태워 보냄

    if one_two % 4 == 0 : # 1명 2명인 그룹의 사람들을 4명씩 그룹질 경우 모든 택시에 자리가 비지 않을 때
        return taxi + one_two // 4
    else : # 1, 2명인 그룹의 사람들이 4명으로 그룹질 경우 하나의 택시에 자리가 빌 때
       return taxi + one_two//4 + 1


s = [2,3,4,4,2,1,3,1]
print(sorted(s))
print(solution(s))



